require 'ostruct'

module Chatcraft; module Util

  # Wrapper for a hash to make config a bit easier to deal with.
  class Config < OpenStruct
    DEFAULT_FILENAME = 'chatcraft.config'

    # Loads the config from a file, defaulting to DEFAULT_FILENAME in the current working directory.
    def self.load_file(file=DEFAULT_FILENAME)
      begin
        Config.new(YAML.load_file(file))
      rescue Errno::ENOENT
        raise 'Config file not found (looking for chatcraft.config in the current directory)'
      end
    end

    # Overridden to override the autogenerated reader methods to return nested config objects.
    def new_ostruct_member(name)
      super(name)
      super_method = method(name)
      define_singleton_method name do
        convert(super_method.call)
      end
    end

    # Convert a returned value into the type we want to return.
    def convert(value)
      if value.is_a?(Hash)
        value = Config.new(value)
      elsif value.is_a?(Array)
        value = value.map { |e| convert(e) }
      else
        value
      end
    end

  end

end; end